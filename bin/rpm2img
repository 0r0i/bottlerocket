#!/bin/bash

set -eu -o pipefail
shopt -qs failglob

for opt in "$@"; do
   optarg="$(expr "${opt}" : '[^=]*=\(.*\)')"
   case "${opt}" in
      --image-name=*) IMAGE_NAME="${optarg}" ;;
      --package-dir=*) PACKAGE_DIR="${optarg}" ;;
      --output-dir=*) OUTPUT_DIR="${optarg}" ;;
   esac
done

DISK_IMAGE="$(mktemp)"
ROOT_MOUNT="/mnt/root"
BOOT_MOUNT="${ROOT_MOUNT}/boot"

mkdir -p "${OUTPUT_DIR}"
rm -f "${OUTPUT_DIR}/${IMAGE_NAME}"

cleanup() {
   set +e
   umount "${BOOT_MOUNT}" "${ROOT_MOUNT}"
   rmdir "${ROOT_MOUNT}"
   kpartx -ds "${DISK_IMAGE}"
}

failure() {
   cleanup
   rm -f "${DISK_IMAGE}"
}

trap failure EXIT

# Define a partition type GUID for the Thar boot partition. GPT specifies
# use of the "GUID specific use" bits (where gptprio works) depend on the
# partition type GUID.
THAR_BOOT_TYPECODE="6b636168-7420-6568-2070-6c616e657421"
THAR_DATA_PARTUUID="b9be5c1d-18f9-4f76-afe0-1119a3b1bbf6"

truncate -s 2G "${DISK_IMAGE}"
# partition 2 attributes: 48 = gptprio priority bit; 56 = gptprio successful bit
sgdisk --clear \
   -n 1:2048:4095 -c 1:"BIOS-BOOT" -t 1:ef02 \
   -n 2:4096:45055 -c 2:"THAR-BOOT-A" -t 2:"${THAR_BOOT_TYPECODE}" -A 2:set:48 -A 2:set:56 \
   -n 3:45056:1050623 -c 3:"THAR-ROOT-A" -t 3:8300 \
   -n 4:1050624:1091583 -c 4:"THAR-BOOT-B" -t 4:"${THAR_BOOT_TYPECODE}" -A 4:clear:48 -A 4:clear:56 \
   -n 5:1091584:2097151 -c 5:"THAR-ROOT-B" -t 5:8300 \
   -n 6:2097152:0 -c 6:"THAR-DATA" -t 6:8300 -u 6:"${THAR_DATA_PARTUUID}" \
   --print "${DISK_IMAGE}"

kpartx -avs "${DISK_IMAGE}"
mkfs.ext4 /dev/mapper/loop0p2
mkfs.ext4 /dev/mapper/loop0p3
mkfs.ext4 /dev/mapper/loop0p6

mkdir -p "${ROOT_MOUNT}"
mount /dev/mapper/loop0p3 "${ROOT_MOUNT}"
mkdir -p "${BOOT_MOUNT}"
mount /dev/mapper/loop0p2 "${BOOT_MOUNT}"

rpm -iv --root "${ROOT_MOUNT}" "${PACKAGE_DIR}"/*.rpm
rm -rf "${ROOT_MOUNT}"/var/lib

cat <<EOF > ${BOOT_MOUNT}/grub/grub.cfg
set default="0"
set timeout="0"

menuentry "Thar" {
   linux (\$root)/vmlinuz root=PARTUUID=\$boot_uuid/PARTNROFF=1 ro console=tty0 console=ttyS0 systemd.log_target=console audit=0 init=/sbin/preinit
}
EOF

grub2-bios-setup \
   --directory="${BOOT_MOUNT}/grub" \
   --skip-fs-probe \
   /dev/loop0
rm -f ${BOOT_MOUNT}/grub/device.map

trap - EXIT
cleanup

mv "${DISK_IMAGE}" "${OUTPUT_DIR}/${IMAGE_NAME}"
chown 1000:1000 "${OUTPUT_DIR}/${IMAGE_NAME}"
