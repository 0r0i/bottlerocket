#!/bin/bash

set -euo pipefail

for opt in "$@"; do
   optarg="$(expr "${opt}" : '[^=]*=\(.*\)')"
   case "${opt}" in
      --spec=*) SPEC="${optarg}" ;;
      --arch=*) ARCH="${optarg}" ;;
   esac
done

PKG="${SPEC##*/}"
PKG="${PKG%.*}"

MACROS="/usr/lib/rpm/macros:macros/${ARCH}:macros/shared:macros/rust:macros/cargo"
RPMSPEC=("rpmspec" "--macros" "${MACROS}" "--define" "_sourcedir packages/${PKG}")

# Collect file-based targets for the outputs of a package build.
RPMS="$("${RPMSPEC[@]}" --query \
           --queryformat="\$(OUTPUT)/%{NAME}-%{VERSION}-%{RELEASE}.%{ARCH}.rpm " "${SPEC}")"
RPMS="${RPMS%"${RPMS##*[![:space:]]}"}"

# Collect file-based targets needed as inputs of a package build.
SOURCE_LINES="$("${RPMSPEC[@]}" --parse "${SPEC}" | awk '/^Source/ {print $NF}')"
SOURCE_URLS="$(awk '$0 ~ "^https?://" {print $0}' <<<$SOURCE_LINES)"
SOURCES="$(awk -v pkg="${PKG}" -F / '{printf "packages/"pkg"/"$NF" "}' <<<$SOURCE_LINES)"
SOURCES="${SOURCES%"${SOURCES##*[![:space:]]}"}"

PATCHES="$("${RPMSPEC[@]}" --parse "${SPEC}" \
              | awk -v pkg="${PKG}" -F '[/ ]' '/^Patch/ {printf "packages/"pkg"/"$NF" "}')"
PATCHES="${PATCHES%"${PATCHES##*[![:space:]]}"}"

# Collect package-level dependencies needed as inputs of a package build.
BUILDREQUIRES="$("${RPMSPEC[@]}" --query --buildrequires "${SPEC}" \
                    | awk '/thar/ {printf "$(%s) ",$0} END {print ""}')"
BUILDREQUIRES="${BUILDREQUIRES%"${BUILDREQUIRES##*[![:space:]]}"}"

echo "${RPMS} : build-${PKG}-${ARCH}"
echo -e "\t@:\n"
echo -e ".INTERMEDIATE: build-${PKG}-${ARCH}\n"
echo "build-${PKG}-${ARCH} : ${SPEC} ${SOURCES} ${PATCHES} ${BUILDREQUIRES}"
echo -e "\t\$(call build_rpm,$PKG,${ARCH},\$^)\n"

for URL in ${SOURCE_URLS}; do
    FILENAME="${URL##*/}"
    if grep -q '^https://crates.io/api/v1/crates/[^/]\+/[^/]\+/download' <<<"$URL"; then
        CRATE="$(awk -F / '{print $7}' <<<"${URL}")"
        VERSION="$(awk -F / '{print $8}' <<<"${URL}")"
        CHECKSUM="$(awk -F / '{print $10}' <<<"${URL}")"
    elif [[ -f "packages/${PKG}/sources" ]]; then
        CHECKSUM="$(awk -v pattern="^[(]${FILENAME}[)]$" '$2 ~ pattern {print $4}' "packages/${PKG}/sources")"
    fi
    echo "packages/${PKG}/${FILENAME} :"
    echo -e "\t@bin/fetch-upstream \"${URL}\" \"packages/${PKG}/${FILENAME}\" \"${CHECKSUM}\"\n"
done
