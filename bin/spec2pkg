#!/bin/bash

for opt in "$@"; do
   optarg="$(expr "${opt}" : '[^=]*=\(.*\)')"
   case "${opt}" in
      --spec=*) SPEC="${optarg}" ;;
      --arches=*) ARCHES="${optarg}" ;;
   esac
done

PKG="${SPEC##*/}"
PKG="${PKG%.*}"

for arch in ${ARCHES//,/ } ; do
   macros="/usr/lib/rpm/macros:macros/${arch}:macros/shared:macros/rust:macros/cargo-external"

   # Collect file-based targets for the outputs of a package build.
   rpms="$(rpmspec --macros "${macros}" --query --queryformat="\$(OUTPUT)/%{NAME}-%{VERSION}-%{RELEASE}.%{ARCH}.rpm " "${SPEC}")"
   rpms="${rpms%"${rpms##*[![:space:]]}"}"

   # Collect file-based targets needed as inputs of a package build.
   sources="$(rpmspec --macros "${macros}" --parse "${SPEC}"|awk -v pkg="${PKG}" -F '[/ ]' '/^Source/ {printf "packages/"pkg"/"$NF" "}')"
   sources="${sources%"${sources##*[![:space:]]}"}"
   patches="$(rpmspec --macros "${macros}" --parse "${SPEC}"|awk -v pkg="${PKG}" -F '[/ ]' '/^Patch/ {printf "packages/"pkg"/"$NF" "}')"
   patches="${patches%"${patches##*[![:space:]]}"}"

   # Collect package-level dependencies needed as inputs of a package build.
   buildrequires="$(rpmspec --macros "${macros}" --query --buildrequires "${SPEC}" | awk '/thar/ {printf "$(%s) ",$0} END {print ""}')"
   buildrequires="${buildrequires%"${buildrequires##*[![:space:]]}"}"

   echo "${rpms} : build-${PKG}-${arch}"
   echo -e "\t@:\n"
   echo -e ".INTERMEDIATE: build-${PKG}-${arch}\n"
   echo "build-${PKG}-${arch} : ${SPEC} ${sources} ${patches} ${buildrequires}"
   echo -e "\t\$(call build_rpm,$PKG,${arch},\$^)\n"
done

if [[ -d "packages/${PKG}/cargo-project" ]]; then
    echo "packages/${PKG}/cargo-project/Cargo.lock : packages/${PKG}/cargo-project/Cargo.toml"
    echo -e "\tcd packages/${PKG}/cargo-project && cargo generate-lockfile\n"
    echo "packages/${PKG}/${PKG}.tar.gz : $(git ls-files "packages/${PKG}/cargo-project" | tr '\n' ' ') packages/${PKG}/cargo-project/Cargo.lock"
    echo -e "\ttar --transform 's!^packages/${PKG}/cargo-project!${PKG}!' -czf \$@ \$^\n"
fi
